<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cancelSendEmail.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAJPSURBVDhPhZPfT5JRGMf9K7SkQhOQNIYg78tLJLS6hPVjbdkQY4kkoJDZYgmC6ezXVulN66Yu
        2rxoa2vropuyi364NseGS+AFKyBprHnh23/w7ZxToPTKOtvZ3vO85/M93+d5zmlqIiOibNbHtEqJTvpN
        Y/8OGo93tEp01u2hiwQBy/O3sXJnFtHOAzIRBqtapc+OY0jqlJhqa97eQ+GNhbv4tfgIW48fIBmPIKrZ
        X9tAYGVcpZDWzjmR4/QQTXp80ncQkRaJuaQC3+/NYevJAioPZ7F5P4HURBCT6n1UxJ5QK1JrA2eQP2FD
        muOR5QxY7lFtC7AUiO3CzCQ256excesKKtNhrPg9uGnQQvS58fW0swZ/NKgZLK8Dsb0eCaMyM47idR/K
        V0dQDg2jcMGFtGBBhjPig0Ejh6vVZk6I7eyYF+VrfhTCPhR8Q8ja7MjwRrw3djaGd4h45rraUZkIoBgc
        Qc7hRJbnkOS6EGtrATnEs1uLWexPqxTSqteF0pgfX/rPMzhvNkMUevG8R0MFdr8nVTg17EYpFMS3i0NI
        W3ikBB2yFhOKFjNyVg7PjFq5CINJ7qlLgyhdHkXRH0DmuB1vTYdw4+BevOYPQ7Ty+GEVkO8zY7G3u16E
        2nrnPovSeAjFQBDiSQeWTCxnalcZa98jvRL0DP7ZJyBnE/CU0zERljs9PekdQGE0gPVBF95w3VWYvQn2
        TojIyyNG5OwWiGS+OGpClMRqxZsixVvuP4Ulq6EO3tliClCwCssuErX813bD10hFGnaiYX//8+M3mS5m
        OK4olxMAAAAASUVORK5CYII=
</value>
  </data>
  <data name="sendMessage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAF3SURBVDhPY2AYcsAq3oqJbEfzlPGElu0ve8WWx2ZOsiGCZYIBuftzf654uuK/zxqfd6r1qgYo
        hvD48LCGzQ4rlUmWEUA3XaxQzDt5c9KPiecn/J9wpv9/6pbUv4q1ioFwdezO7CxK9QqrqvaW/LeeYHlC
        MEyQDyYplSvlFrsq4nvDwar/dXsr/yeujPvLlsmWgWKJVL5UTtqayP+FO1L+F+1K/m/ZanKEP5ifRypJ
        0ilyke/Xkj2p/wu2pfxPXRHzjzeTNw/D/+zu7Pxa1UqnUjb4/U/fGfA/c1fAf9MqnVNBs+w/Z+0N/J+5
        I+h/1pqYfyLpQiU4A4/Nk01Iv0r5XOxWi/+xe03/J+4z/R+3z/h/+Fbd/wHz9P6JpwhXEQx5dhd2Eb0S
        mUv+e0X++x4T+O9zlP+/70rpf+JxQg0ENcMUsDuyi5uUyVyNuyX+P+qA3H+JMKE2ojXDFLI6sEo61ihe
        lwsX7iZZM0wDlx4r+UmWbFvJ0QgAoKCDpGDdMoEAAAAASUVORK5CYII=
</value>
  </data>
</root>